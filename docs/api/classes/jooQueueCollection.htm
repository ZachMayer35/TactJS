<h3>
    API - Classes - QueueCollection</h3>
<hr>
<h4>
    Tact.QueueCollection</h4>
<p>
    @class<br>
    @description Handles a collection of elements and manages queues stored on their
    DOM elements.
</p>
<h3>
    API - Classes - QueueCollection - constructor</h3>
<hr>
<h4>
    new Tact.QueueCollection(els, name)</h4>
<p>
    @constructor<br>
    @param {jQuery} els<br>
    @param {string} name
</p>
<h3>
    API - Classes - QueueCollection - getByIndex</h3>
<hr>
<h4>
    Tact.QueueCollection.getByIndex(index)</h4>
<p>
    @description<br>
    @param {number} index<br>
    @returns {Tact.Queue}
</p>
<h3>
    API - Classes - QueueCollection - push</h3>
<hr>
<h4>
    Tact.QueueCollection.push(delegate)</h4>
<p>
    @description
    <br>
    @param {function} delegate<br>
    @returns {Tact.QueueCollection}
</p>
<h3>
    API - Classes - QueueCollection - pop</h3>
<hr>
<h4>
    Tact.QueueCollection.pop(args)</h4>
<p>
    @description
    <br>
    @param {array} args<br>
    @returns {Tact.QueueCollection}
</p>
<h3>
    API - Classes - QueueCollection - maxCount</h3>
<hr>
<h4>
    Tact.QueueCollection.maxCount()</h4>
<p>
    @description
    <br>
    @returns {number}
</p>
