<h3>
    API - Classes - Storage</h3>
<hr>
<h4>
    Tact.Storage</h4>
<p>
    @class<br>
    @description Wraps a storage mechanism</p>
<h3>
    API - Classes - Storage - constructor</h3>
<hr>
<h4>
    new Tact.Storage(store)</h4>
<p>
    @constructor<br>
    @param {object} store
</p>
<h3>
    API - Classes - Storage - clear</h3>
<hr>
<h4>
    Tact.Storage.clear()</h4>
<p>
    @description Clears the storage.
</p>
<h3>
    API - Classes - Storage - getItem</h3>
<hr>
<h4>
    Tact.Storage.getItem(key)</h4>
<p>
    @description Gets an item by key.<br>
    @param {string} key<br>
    @return {string}
</p>
<h3>
    API - Classes - Storage - getObject</h3>
<hr>
<h4>
    Tact.Storage.getObject(key)</h4>
<p>
    @description Gets an object by key.<br>
    @param {string} key<br>
    @return {object}
</p>
<h3>
    API - Classes - Storage - removeItem</h3>
<hr>
<h4>
    Tact.Storage.removeItem(key, doGet)</h4>
<p>
    @description Removes an item from storage.<br>
    @param {string} key<br>
    @param {boolean} doGet (Optional)<br>
    @return {string}
</p>
<h3>
    API - Classes - Storage - removeObject</h3>
<hr>
<h4>
    Tact.Storage.removeObject(key, doGet)</h4>
<p>
    @description Removes an object from storage.<br>
    @param {string} key<br>
    @param {boolean} doGet (Optional)<br>
    @return {object}
</p>
<h3>
    API - Classes - Storage - setItem</h3>
<hr>
<h4>
    Tact.Storage.setItem(key, value)</h4>
<p>
    @description Sets an item by key.<br>
    @param {string} key<br>
    @param {string} value
</p>
<h3>
    API - Classes - Storage - setObject</h3>
<hr>
<h4>
    Tact.Storage.setObject(key, value)</h4>
<p>
    @description Sets an object by key.<br>
    @param {string} key<br>
    @param {object} value
</p>
